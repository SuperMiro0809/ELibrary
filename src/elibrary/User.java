/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package elibrary;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author aneli
 */
public class User extends javax.swing.JFrame {
    public int userId = 0;
  
    /* 
    *@param user;
    */
    public User(UserState user) {
        if(user != null) {
            initComponents();
            
            UserName.setText(user.getUsername());
            userId = user.getId();
            
            loadSearchTable();
            loadSectionTable();
        }else {
            JOptionPane.showMessageDialog(null, "Please login to visit this page.");
            
            Login object = new Login();
        
            object.setVisible(true);

            dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        RoleLabel = new javax.swing.JLabel();
        HeaderLabel = new javax.swing.JLabel();
        LogoLabel = new javax.swing.JLabel();
        UserName = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        IDLabel = new javax.swing.JLabel();
        CategoryLabel = new javax.swing.JLabel();
        BookNameLabel = new javax.swing.JLabel();
        AuthorLabel = new javax.swing.JLabel();
        IDField = new javax.swing.JTextField();
        BookNameField = new javax.swing.JTextField();
        AuthorField = new javax.swing.JTextField();
        CategoryBox = new javax.swing.JComboBox<>();
        ResultLabel = new javax.swing.JLabel();
        SectionHeader = new javax.swing.JLabel();
        SectionScrollPane = new javax.swing.JScrollPane();
        SectionTable = new javax.swing.JTable();
        AddBookLabel = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        SectionScrollPane1 = new javax.swing.JScrollPane();
        SearchTable = new javax.swing.JTable();
        ResetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(97, 95, 84));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(71, 70, 62), 3, true));

        jPanel2.setBackground(new java.awt.Color(250, 238, 175));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(71, 70, 62)));

        RoleLabel.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        RoleLabel.setForeground(new java.awt.Color(102, 87, 11));
        RoleLabel.setText("Logged as user: ");

        HeaderLabel.setFont(new java.awt.Font("Vladimir Script", 1, 60)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(71, 70, 62));
        HeaderLabel.setText("E-Library");

        UserName.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        UserName.setForeground(new java.awt.Color(102, 87, 11));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(LogoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeaderLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(RoleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HeaderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RoleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(250, 238, 175));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(71, 70, 62)));

        IDLabel.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        IDLabel.setForeground(new java.awt.Color(97, 95, 84));
        IDLabel.setText("ID");

        CategoryLabel.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        CategoryLabel.setForeground(new java.awt.Color(97, 95, 84));
        CategoryLabel.setText("Category");

        BookNameLabel.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        BookNameLabel.setForeground(new java.awt.Color(97, 95, 84));
        BookNameLabel.setText("Book name");

        AuthorLabel.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        AuthorLabel.setForeground(new java.awt.Color(97, 95, 84));
        AuthorLabel.setText("Author");

        IDField.setBackground(new java.awt.Color(227, 223, 197));
        IDField.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        IDField.setForeground(new java.awt.Color(102, 87, 11));

        BookNameField.setBackground(new java.awt.Color(227, 223, 197));
        BookNameField.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        BookNameField.setForeground(new java.awt.Color(102, 87, 11));

        AuthorField.setBackground(new java.awt.Color(227, 223, 197));
        AuthorField.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        AuthorField.setForeground(new java.awt.Color(102, 87, 11));

        CategoryBox.setBackground(new java.awt.Color(227, 223, 197));
        CategoryBox.setFont(new java.awt.Font("Nirmala UI", 0, 13)); // NOI18N
        CategoryBox.setForeground(new java.awt.Color(97, 95, 84));
        CategoryBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Autobiography", "Biography", "Classics", "Crime/Mistery", "Fairytales", "Fantasy", "Horror", "Humour and satire", "Poetry", "Romance", "Science fiction", "Self-help", " ", " " }));

        ResultLabel.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        ResultLabel.setForeground(new java.awt.Color(102, 87, 11));
        ResultLabel.setText("Result of searching:");

        SectionHeader.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        SectionHeader.setForeground(new java.awt.Color(102, 87, 11));
        SectionHeader.setText("MS(My section):");

        SectionTable.setBackground(new java.awt.Color(227, 223, 197));
        SectionTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 87, 11), 1, true));
        SectionTable.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        SectionTable.setForeground(new java.awt.Color(97, 95, 84));
        SectionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Autor", "Book name", "Category", "ID", "Operation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SectionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SectionTableMouseClicked(evt);
            }
        });
        SectionScrollPane.setViewportView(SectionTable);

        AddBookLabel.setFont(new java.awt.Font("Eras Medium ITC", 1, 18)); // NOI18N
        AddBookLabel.setForeground(new java.awt.Color(102, 87, 11));
        AddBookLabel.setText("Search for a book");

        SearchButton.setBackground(new java.awt.Color(97, 95, 84));
        SearchButton.setFont(new java.awt.Font("Eras Medium ITC", 0, 18)); // NOI18N
        SearchButton.setForeground(new java.awt.Color(227, 223, 197));
        SearchButton.setText("Search");
        SearchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchButtonMousePressed(evt);
            }
        });
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        SearchTable.setBackground(new java.awt.Color(227, 223, 197));
        SearchTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 87, 11), 1, true));
        SearchTable.setFont(new java.awt.Font("Nirmala UI", 1, 13)); // NOI18N
        SearchTable.setForeground(new java.awt.Color(97, 95, 84));
        SearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Book name", "Category", "Autor", "Operation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SearchTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchTableMouseClicked(evt);
            }
        });
        SectionScrollPane1.setViewportView(SearchTable);

        ResetButton.setBackground(new java.awt.Color(97, 95, 84));
        ResetButton.setFont(new java.awt.Font("Eras Medium ITC", 0, 18)); // NOI18N
        ResetButton.setForeground(new java.awt.Color(227, 223, 197));
        ResetButton.setText("Reset");
        ResetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ResetButtonMousePressed(evt);
            }
        });
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AddBookLabel)
                            .addComponent(SectionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CategoryLabel)
                                    .addComponent(IDLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(IDField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                                .addGap(125, 125, 125)
                                                .addComponent(BookNameLabel))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(282, 282, 282)
                                                .addComponent(AuthorLabel)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(AuthorField, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                            .addComponent(BookNameField)))
                                    .addComponent(CategoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(SectionHeader)
                            .addComponent(SectionScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResultLabel)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(SearchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ResetButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(21, 21, 21))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(AddBookLabel)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BookNameLabel)
                            .addComponent(BookNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AuthorLabel)
                            .addComponent(AuthorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(IDLabel)
                            .addComponent(IDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CategoryLabel)
                            .addComponent(CategoryBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SearchButton)
                            .addComponent(ResetButton))
                        .addGap(26, 26, 26)
                        .addComponent(ResultLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(SectionScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SectionHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SectionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void SearchTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchTableMouseClicked
        int index=SearchTable.getSelectedRow();
        TableModel model=SearchTable.getModel();
        
        int id=(int) model.getValueAt(index, 0);
        String bookName=(String) model.getValueAt(index, 1);
        String category=(String) model.getValueAt(index, 2);
        String autor=(String) model.getValueAt(index, 3);
        
        int response = JOptionPane.showConfirmDialog(this,"Are you sure you want to add to MS the book with parameters: \n ID: " + id + "\n Book name: " + bookName + "\n Category: " + category + "\n Autor: " + autor, "Confirmation of removal", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(response==JOptionPane.YES_OPTION){
            UserBookService userBookService = new UserBookService();
            
            int res = userBookService.addBookToUser(id, userId);
            
            if(res == 200) { //sucess
                loadSectionTable();
            }else if(res == 409) { //conflict
                JOptionPane.showMessageDialog(null, "The book is already added!");
                System.out.println("conflict");
            }else { //error
                System.out.println("error");
            }
            
        }
        else if(response==JOptionPane.NO_OPTION){
            System.out.println("Confirmation denied.");
        }
        else if(response==JOptionPane.CLOSED_OPTION){
            System.out.println("The confirmation form has been closed.");
        }
    }//GEN-LAST:event_SearchTableMouseClicked

    private void SectionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SectionTableMouseClicked
        int index=SectionTable.getSelectedRow();
        TableModel model=SectionTable.getModel();
        
        int id=(int) model.getValueAt(index, 0);
        String bookName=(String) model.getValueAt(index, 1);
        String category=(String) model.getValueAt(index, 2);
        String autor=(String) model.getValueAt(index, 3);
        
        String[] def={"Read","Remove from MS"};
        int response = JOptionPane.showOptionDialog(null,"What do you want to do with the book with parameters: \n ID: " + id + "\n Book name: " + bookName + "\n Category: " + category + "\n Autor: " + autor, "Confirmation of action", 0,JOptionPane.QUESTION_MESSAGE,null,def,"Read");
        
        if(response==JOptionPane.YES_OPTION){ //read
            //read
        }
        else if(response==JOptionPane.NO_OPTION){ //remove
            UserBookService userBookService = new UserBookService();
            
            boolean res = userBookService.removeBookFromUser(id, userId);
            
            if(res) {
                JOptionPane.showMessageDialog(null, "success");
                loadSectionTable();
            }
        }
        else if(response==JOptionPane.CLOSED_OPTION){
            System.out.println("The confirmation form has been closed.");
        }
    }//GEN-LAST:event_SectionTableMouseClicked

    private void SearchButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchButtonMousePressed
        String idStr = IDField.getText();
        String name = BookNameField.getText();
        String category = CategoryBox.getSelectedItem().toString();
        String author = AuthorField.getText();
        
        int id = idStr.isBlank() ? 0 : Integer.parseInt(idStr);
        
        Book book = new Book(id, "", name, category, author);
        
        loadSearchTable(book);
    }//GEN-LAST:event_SearchButtonMousePressed

    private void ResetButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetButtonMousePressed
        // reset search form fields
        IDField.setText("");
        BookNameField.setText("");
        CategoryBox.setSelectedIndex(0);
        AuthorField.setText("");
        
        // load search table
        loadSearchTable();
    }//GEN-LAST:event_ResetButtonMousePressed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResetButtonActionPerformed
    
    private void loadSearchTable() {
        BookService bookService = new BookService();
        
        ArrayList<Book> bookArr = bookService.getBooks();
        
        DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "Book name", "Category", "Author"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Make all cells uneditable
                return false;
            }
        };
        
        tableModel.setRowCount(0);
        
        for(Book book : bookArr) {
            Object[] rowData = {book.getId(), book.getName(), book.getCategory(), book.getAuthor()};
            tableModel.addRow(rowData);
        }
        
        SearchTable.setModel(tableModel);
    }
    
    private void loadSearchTable(Book b) {
        BookService bookService = new BookService();
        
        ArrayList<Book> bookArr = bookService.getBooks(b);
        
        DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "Book name", "Category", "Author"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Make all cells uneditable
                return false;
            }
        };
        
        tableModel.setRowCount(0);
        
        for(Book book : bookArr) {
            Object[] rowData = {book.getId(), book.getName(), book.getCategory(), book.getAuthor()};
            tableModel.addRow(rowData);
        }
        
        SearchTable.setModel(tableModel);
    }
    
    private void loadSectionTable() {
        UserBookService userBookSerive = new UserBookService();
        
        ArrayList<Book> bookArr = userBookSerive.getUserBooks(userId);
        
        DefaultTableModel tableModel = new DefaultTableModel(new Object[]{"ID", "Book name", "Category", "Author"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Make all cells uneditable
                return false;
            }
        };
        
        tableModel.setRowCount(0);
        
        for(Book book : bookArr) {
            Object[] rowData = {book.getId(), book.getName(), book.getCategory(), book.getAuthor()};
            tableModel.addRow(rowData);
        }
        
        SectionTable.setModel(tableModel);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddBookLabel;
    private javax.swing.JTextField AuthorField;
    private javax.swing.JLabel AuthorLabel;
    private javax.swing.JTextField BookNameField;
    private javax.swing.JLabel BookNameLabel;
    private javax.swing.JComboBox<String> CategoryBox;
    private javax.swing.JLabel CategoryLabel;
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JTextField IDField;
    private javax.swing.JLabel IDLabel;
    private javax.swing.JLabel LogoLabel;
    private javax.swing.JButton ResetButton;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTable SearchTable;
    private javax.swing.JLabel SectionHeader;
    private javax.swing.JScrollPane SectionScrollPane;
    private javax.swing.JScrollPane SectionScrollPane1;
    private javax.swing.JTable SectionTable;
    private javax.swing.JLabel UserName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
